"use strict"

//  1. WE HAVE " " + 1 + 0, IN CONSOLE WE WILL HAVE 10 IN STRING ("10"),
//  BECAUSE THE PRIORITY OF STRING IS HIGHER THAN THE NUMBER;
console.log("" + 1 + 0);

//  2. WE HAVE " " - 1 + 0, IN CONSOLE WE WILL HAVE -1 NUMBER,
//  BECAUSE IN THIS CASE THE STRING CANNOT DO A MINUS OPERATION WITH NUMBER;
console.log("" - 1 + 0);

//  3. WE HAVE TRUE + FALSE, IN CONSOLE WE WILL HAVE 1 NUMBER,
//  BECAUSE THE TRUE WILL BE 1 AND FALSE WILL BE 0;
console.log(true + false);

//  4. WE HAVE 6 / "3", IN CONSOLE WE WILL HAVE 2 NUMBER,
//  BECAUSE WE CANNOT DIVIDE A NUMBER TO A STRING, THE NUMBERS PRIORITY IS HIGHER;
console.log(6 / "3"); 

//  5. WE HAVE "2" * "3", IN CONSOLE WE WILL HAVE 6 NUMBER,
//  BECAUSE IT WILL TURN THE STRING TO NUMBER;
console.log("2" * "3");

//  6. WE HAVE 4 + 5 + "PX", IN CONSOLE WE WILL HAVE "9PX" STRING,
//  BECAUSE THE 4 WILL BE ADDED TO 5 AND THEN 9 WILL CONCAT TO STRING;
console.log(4 + 5 + "px");

//  7. WE HAVE "$" + 4 + 5, IN CONSOLE WE WILL HAVE "$45" STRING,
//  BECAUSE THE STRING WILL CONCAT THE NUMBERS TO HIM;
console.log("$" + 4 + 5);

//  8. WE HAVE "4" - 2, IN CONSOLE WE WILL HAVE 2 NUMBER,
//  BECAUSE IT WILL TAKE THE 4 NUMBER FROM STRING TO - WITH 2 NUMBER;
console.log("4" - 2);


//  9. WE HAVE 7 / 0, IN CONSOLE WE WILL HAVE INFINITY,
//  BECAUSE THE NUMBER DIVIDED TO 0 WILL RETURN INFINITY;
console.log(7 / 0);

//  10. WE HAVE "-9" + 5, IN CONSOLE WE WILL HAVE -95 STRING,
//  BECAUSE IT WILL CONCAT 5 TO STRING "-9";
console.log("-9" + 5);

//  11. WE HAVE "-9" - 5, IN CONSOLE WE WILL HAVE -14 NUMBER,
//  BECAUSE IT WILL TAKE NUMBER OUT OF STRING AND DO A MINUS OPERATION;
console.log("-9" - 5);

//  12. WE HAVE NULL + 1, IN CONSOLE WE WILL HAVE 1 NUMBER,
//  BECAUSE NULL WILL TURN TO NUMBER 0 AND PLUS 1;
console.log(null + 1);


//  13. WE HAVE UNDEFINED + 1, IN CONSOLE WE WILL HAVE NaN,
//  BECAUSE UNDEFINED IS NaN;
console.log(undefined + 1);